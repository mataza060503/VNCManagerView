<Window x:Class="VNCManagerView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="VNC Device Manager" Height="700" Width="700"
        MinHeight="500" MinWidth="500"
        Background="#F8F9FA"
        WindowStartupLocation="CenterScreen"
        Icon="/VNCManagerView;component/Assets/main_icon.ico">

    <Window.Resources>
        <!-- Converter -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Fade In Animation -->
        <Storyboard x:Key="FadeInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                           From="0" To="1" Duration="0:0:0.3">
                <DoubleAnimation.EasingFunction>
                    <QuadraticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- Slide In Animation -->
        <Storyboard x:Key="SlideInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" 
                           From="20" To="0" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                           From="0" To="1" Duration="0:0:0.3"/>
        </Storyboard>

        <!-- Modern Button Style with Animation -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        CornerRadius="6"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                            <Border.Effect>
                                <DropShadowEffect x:Name="shadow" 
                                        BlurRadius="8" 
                                        ShadowDepth="2" 
                                        Color="#40000000" 
                                        Opacity="0.3"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <Border.RenderTransformOrigin>0.5,0.5</Border.RenderTransformOrigin>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform" 
                                               Storyboard.TargetProperty="ScaleX" 
                                               To="1.05" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform" 
                                               Storyboard.TargetProperty="ScaleY" 
                                               To="1.05" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="shadow" 
                                               Storyboard.TargetProperty="BlurRadius" 
                                               To="12" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="shadow" 
                                               Storyboard.TargetProperty="ShadowDepth" 
                                               To="4" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform" 
                                               Storyboard.TargetProperty="ScaleX" 
                                               To="1" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform" 
                                               Storyboard.TargetProperty="ScaleY" 
                                               To="1" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="shadow" 
                                               Storyboard.TargetProperty="BlurRadius" 
                                               To="8" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="shadow" 
                                               Storyboard.TargetProperty="ShadowDepth" 
                                               To="2" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#004578"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scaleTransform" 
                                                   Storyboard.TargetProperty="ScaleX" 
                                                   To="0.98" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="scaleTransform" 
                                                   Storyboard.TargetProperty="ScaleY" 
                                                   To="0.98" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scaleTransform" 
                                                   Storyboard.TargetProperty="ScaleX" 
                                                   To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="scaleTransform" 
                                                   Storyboard.TargetProperty="ScaleY" 
                                                   To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Success Button Style -->
        <Style x:Key="SuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#28A745"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1E7E34"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Warning Button Style -->
        <Style x:Key="WarningButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#FFC107"/>
            <Setter Property="Foreground" Value="#212529"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E0A800"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Danger Button Style -->
        <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#DC3545"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#C82333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#6C757D"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#5A6268"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern TreeView Style -->
        <Style TargetType="TreeView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        <!-- Custom TreeViewItem Style -->
        <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Header with custom expand/collapse -->
                            <Border x:Name="headerBorder" 
                                    Grid.Row="0"
                                    Background="White"
                                    CornerRadius="8"
                                    Margin="0,1"
                                    Padding="0"
                                    Cursor="Hand"
                                    MouseLeftButtonDown="TreeItemHeader_MouseLeftButtonDown">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="6" 
                                                    ShadowDepth="1" 
                                                    Color="#20000000" 
                                                    Opacity="0.1"/>
                                </Border.Effect>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="headerTransform"/>
                                </Border.RenderTransform>

                                <Grid Margin="16,12">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Expand/Collapse Arrow -->
                                    <Border Grid.Column="0" 
                                            Width="24" Height="24"
                                            Background="#F8F9FA"
                                            CornerRadius="12"
                                            Margin="0,0,12,0"
                                            VerticalAlignment="Center"
                                            Visibility="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBlock x:Name="expanderArrow" 
                                                 Text="▶" 
                                                 FontSize="10"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Foreground="#6C757D"
                                                 RenderTransformOrigin="0.5,0.5">
                                            <TextBlock.RenderTransform>
                                                <RotateTransform x:Name="arrowRotation" Angle="0"/>
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </Border>

                                    <!-- Icon and Content -->
                                    <ContentPresenter Grid.Column="1" 
                                                    x:Name="PART_Header" 
                                                    ContentSource="Header"
                                                    VerticalAlignment="Center"/>

                                    <!-- Action Buttons -->
                                    <StackPanel Grid.Column="3" 
                                              Orientation="Horizontal" 
                                              Margin="10,0,0,0"
                                              x:Name="actionButtons"
                                              Opacity="0">
                                        <!-- Connect Button (only for devices) -->
                                        <Button Content="Connect" 
                                                Style="{StaticResource SuccessButtonStyle}"
                                                Click="ConnectButton_Click"
                                                Margin="2,0"
                                                Width="50"
                                                Padding="10"
                                                Visibility="{Binding IsDevice, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <!-- Add Button (for branches and plants) -->
                                        <Button Content="+ Add" 
                                                Style="{StaticResource ModernButtonStyle}"
                                                Click="AddButton_Click"
                                                Margin="2,0"
                                                Width="50"
                                                Padding="10"
                                                Visibility="{Binding CanAddChildren, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <!-- Edit Button -->
                                        <Button Content="Edit" 
                                                Width="50"
                                                Padding="10"
                                                Style="{StaticResource WarningButtonStyle}"
                                                Click="EditButton_Click"
                                                Margin="2,0"/>

                                        <!-- Delete Button -->
                                        <Button Content="Delete"
                                                Width="50"
                                                Padding="10"
                                                Style="{StaticResource DangerButtonStyle}"
                                                Click="DeleteButton_Click"
                                                Margin="2,0"/>
                                    </StackPanel>
                                </Grid>
                            </Border>

                            <!-- Children -->
                            <ItemsPresenter Grid.Row="1" 
                                  x:Name="ItemsHost"
                                  Margin="20,0,0,0"
                                  Visibility="Collapsed">
                                <ItemsPresenter.RenderTransform>
                                    <TranslateTransform x:Name="childrenTransform" Y="-10"/>
                                </ItemsPresenter.RenderTransform>
                            </ItemsPresenter>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Mouse over effects -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="headerBorder" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                      To="#F8F9FA" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="headerTransform" 
                                                       Storyboard.TargetProperty="Y" 
                                                       To="-2" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="actionButtons" 
                                                       Storyboard.TargetProperty="Opacity" 
                                                       To="1" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="headerBorder" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                      To="White" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="headerTransform" 
                                                       Storyboard.TargetProperty="Y" 
                                                       To="0" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="actionButtons" 
                                                       Storyboard.TargetProperty="Opacity" 
                                                       To="0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Expand/Collapse animations -->
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="arrowRotation" 
                                                   Storyboard.TargetProperty="Angle" 
                                                   To="90" Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetName="ItemsHost" 
                                                   Storyboard.TargetProperty="Opacity" 
                                                   To="1" Duration="0:0:0.4"/>
                                            <DoubleAnimation Storyboard.TargetName="childrenTransform" 
                                                   Storyboard.TargetProperty="Y" 
                                                   To="0" Duration="0:0:0.4">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="arrowRotation" 
                                                   Storyboard.TargetProperty="Angle" 
                                                   To="0" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="ItemsHost" 
                                                   Storyboard.TargetProperty="Opacity" 
                                                   To="0" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="childrenTransform" 
                                                   Storyboard.TargetProperty="Y" 
                                                   To="-10" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>

                            <!-- Selected state -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="headerBorder" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="#E3F2FD" Offset="0"/>
                                            <GradientStop Color="#BBDEFB" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="headerBorder" Property="BorderBrush" Value="#2196F3"/>
                                <Setter TargetName="headerBorder" Property="BorderThickness" Value="1,1,4,1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- HierarchicalDataTemplate for TreeView -->
        <HierarchicalDataTemplate x:Key="TreeNodeTemplate" ItemsSource="{Binding Children}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Icon and Name -->
                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                    <Border Background="{Binding IconBackground}" 
                            CornerRadius="8" 
                            Width="32" Height="32" 
                            Margin="0,0,12,0">
                        <TextBlock Text="{Binding Icon}" 
                                 FontSize="14" 
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"/>
                    </Border>
                    <StackPanel VerticalAlignment="Center">
                        <TextBlock Text="{Binding Name}" 
                                 FontWeight="SemiBold" 
                                 FontSize="13"
                                 Foreground="#2C3E50"/>
                        <TextBlock Text="{Binding ConnectionInfo}" 
                                 FontFamily="Consolas" 
                                 FontSize="10" 
                                 Foreground="#95A5A6"
                                 Margin="0,2,0,0"
                                 Visibility="{Binding IsDevice, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </StackPanel>

                <!-- Status Indicator -->
                <Border Grid.Column="2" 
                        Background="{Binding StatusColor}"
                        CornerRadius="6"
                        Width="12" Height="12"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsDevice, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="4" ShadowDepth="0" Color="{Binding StatusColor}" Opacity="0.6"/>
                    </Border.Effect>
                </Border>
            </Grid>
        </HierarchicalDataTemplate>
    </Window.Resources>

    <Grid Margin="24">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header with modern gradient -->
        <Grid Grid.Row="0" Margin="0,0,0,24">
            <Grid.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#667eea" Offset="0"/>
                    <GradientStop Color="#764ba2" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Border CornerRadius="12" Padding="24,20">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <!-- Title + Buttons row -->
                        <RowDefinition Height="Auto"/>
                        <!-- Subtitle row -->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Title - Left side -->
                    <TextBlock Grid.Column="0"
                       Text="VNC Device Manager" 
                       FontSize="28" 
                       FontWeight="Bold" 
                       Foreground="White"
                       VerticalAlignment="Center">  
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="4" ShadowDepth="2" Color="#40000000" Opacity="0.5"/>
                        </TextBlock.Effect>
                    </TextBlock>

                    <!-- Buttons - Right side -->
                    <StackPanel Grid.Column="1"
                       Orientation="Horizontal" 
                       VerticalAlignment="Center"
                       HorizontalAlignment="Right">
                        <Button Name="AddBranchButton"
                            Content="➕ Add Branch" 
                            Style="{StaticResource SuccessButtonStyle}"
                            Click="AddBranchButton_Click"
                            Margin="12,0,0,0"
                            Padding="16,8"
                            Height="30"
                            Width="100"
                            FontSize="12"
                            ToolTip="Add new branch"
                            VerticalAlignment="Center"/>

                        <Button Name="RefreshButton"
                            Content="🔄 Refresh" 
                            Style="{StaticResource SecondaryButtonStyle}"
                            Click="RefreshButton_Click"
                            Margin="12,0,0,0"
                            Padding="16,8"
                            Height="30"
                            Width="80"
                            FontSize="12"
                            ToolTip="Reload configuration file"
                            VerticalAlignment="Center"/>

                        <Button Name="OpenConfigButton"
                            Content="⚙️ Settings" 
                            Style="{StaticResource SecondaryButtonStyle}"
                            Click="OpenConfigButton_Click"
                            Margin="12,0,0,0"
                            Padding="16,8"
                            Height="30"
                            Width="80"
                            FontSize="12"
                            ToolTip="Open configuration file"
                            VerticalAlignment="Center"/>    
                    </StackPanel>

                    <!-- Subtitle - Second row -->
                    <TextBlock Grid.Row="1"
                   Grid.ColumnSpan="2"
                   Text="Manage your VNC infrastructure with modern interface and smooth animations" 
                   FontSize="13" 
                   Foreground="#E8EAF6"
                   Opacity="0.9"
                   Margin="0,8,0,0"/>
                    <!-- Add small top margin -->
                </Grid>
            </Border>
        </Grid>

        <!-- Device Tree with modern container -->
            <Border Grid.Row="1" 
                Background="White"
                CornerRadius="12"
                Padding="16">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="#20000000" Opacity="0.1"/>
                </Border.Effect>

                <TreeView Name="DeviceTreeView"
                      ItemTemplate="{StaticResource TreeNodeTemplate}"
                      Loaded="DeviceTreeView_Loaded">
                    <TreeView.Style>
                        <Style TargetType="TreeView" BasedOn="{StaticResource {x:Type TreeView}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="0">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TreeView">
                                                <Border Background="Transparent">
                                                    <StackPanel HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center"
                                                          Margin="50">
                                                        <Ellipse Width="80" Height="80" 
                                                           Margin="0,0,0,24"
                                                           Fill="#F8F9FA"
                                                           Stroke="#DEE2E6"
                                                           StrokeThickness="2"/>
                                                        <TextBlock Text="🏢" 
                                                             FontSize="32" 
                                                             HorizontalAlignment="Center"
                                                             Margin="0,-60,0,20"
                                                             Opacity="0.6"/>
                                                        <TextBlock Text="No branches configured" 
                                                             FontSize="20" 
                                                             FontWeight="SemiBold"
                                                             HorizontalAlignment="Center"
                                                             Foreground="#6C757D"
                                                             Margin="0,0,0,12"/>
                                                        <TextBlock Text="Click 'Add Branch' to create your first branch and start managing VNC devices" 
                                                             FontSize="13" 
                                                             HorizontalAlignment="Center"
                                                             Foreground="#ADB5BD"
                                                             TextWrapping="Wrap"
                                                             MaxWidth="300"
                                                             TextAlignment="Center"/>
                                                    </StackPanel>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.Style>
                </TreeView>
            </Border>

            <!-- Status Bar with gradient -->
            <Border Grid.Row="2" 
                CornerRadius="8"
                Margin="0,16,0,0"
                Padding="20,12">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#F8F9FA" Offset="0"/>
                        <GradientStop Color="#E9ECEF" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <Border Background="#007ACC" 
                            CornerRadius="4" 
                            Padding="8,2" 
                            Margin="0,0,12,0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Branches: " 
                                     FontSize="11" 
                                     Foreground="White"/>
                                <TextBlock Text="{Binding Items.Count, ElementName=DeviceTreeView}" 
                                     FontSize="11" 
                                     Foreground="White" 
                                     FontWeight="SemiBold"/>
                            </StackPanel>
                        </Border>
                        <TextBlock Text="Ready to manage VNC devices with enhanced experience" 
                             FontSize="11" 
                             Foreground="#6C757D" 
                             VerticalAlignment="Center"/>
                    </StackPanel>

                    <Border Grid.Column="1"
                        Background="#28A745"
                        CornerRadius="12"
                        Padding="8,4">
                        <StackPanel Orientation="Horizontal">
                            <Ellipse Width="8" Height="8" 
                               Fill="White" 
                               Margin="0,0,6,0"/>
                            <TextBlock Text="System Ready"
                                 VerticalAlignment="Center"
                                 FontSize="11"
                                 Foreground="White"
                                 FontWeight="SemiBold"/>
                        </StackPanel>
                    </Border>
                </Grid>
            </Border>
        </Grid>
</Window>